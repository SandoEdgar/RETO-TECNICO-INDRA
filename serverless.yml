service: api-rimac

plugins:
  - serverless-offline
  - serverless-plugin-include-dependencies
  - serverless-mocha-plugin
  - serverless-aws-documentation

package:
  exclude:
    - node_modules/**

frameworkVersion: '2'

custom:
  settings:
    POST_TABLE_PEOPLE: people
    URL_STARTWARS: https://swapi.py4e.com/api
  documentation:
    api:
      info:
        version: "1" # see note above about this being ignored
        title: "RestAPI - SWAPI" # see note above about this being ignored
        description: "Adaptar y transformar los modelos de la API de prueba. Se tienen que mapear todos los nombres de atributos modelos del inglés al español (Ej: name -> nombre)."
        termsOfService: "http://www.example.com/terms-of-service"
        contact:
          name: "Edgar Sandoval Carlos"
          url: ""
          email: "edsan_6@hotmail.com"

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  lambdaHashingVersion: 20201221
  stage: dev
  environment: ${self:custom.settings}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
      - "arn:aws:dynamodb:us-east-1:*:table/people"
      - "arn:aws:dynamodb:us-east-1:*:table/planet"

functions:
  createPeople:
    handler: controllers/peopleController.createPeople
    events:
      - http:
          path: /createPeople/{number}
          method: post
          request:
            parameters:
              paths:
                number: true
          documentation:
            summary: "Crear un registro de persona"
            description: "En caso no exista el id de people creará el registro en dynamoDB"
            pathParams:
              -
                name: "number"
                description: "id del registro people del API SWAPI"
            methodResponses:
            -
              statusCode: "200"
              responseBody:
                description: "Se obtuvo el registro de la base de datos"
            -
              statusCode: "201"
              responseBody:
                description: "Se creó correctamente el registro"
            -
              statusCode: "500"
              responseBody:
                description: "Error en el servicio"

  getAllPeople:
    handler: controllers/peopleController.getAllPeople
    events:
      - http:
          path: /getAllPeople
          method: get
          documentation:
            summary: "Obtener todos los registros"
            description: "Obtiene todos los registros de la tabla people"
            methodResponses:
            -
              statusCode: "200"
              responseBody:
                description: "Se obtuvo todos los registros"
            -
              statusCode: "500"
              responseBody:
                description: "Error en el servicio"
  updatePeople:
    handler: controllers/peopleController.updatePeople
    events:
      - http:
          path: /updatePeople/{id}
          method: put
          request:
            parameters:
              paths:
                id: true
          documentation:
            summary: "Se actualizará el registro people"
            description: "Se actualizará el registro people"
            pathParams:
              -
                name: "id"
                description: "id del registro people del API SWAPI"
            requestBody:
              description: '{"paramName":"campo","paramValue":"valor"}'
            methodResponses:
            -
              statusCode: "200"
              responseBody:
                description: "Se actualizó con éxito"
            -
              statusCode: "500"
              responseBody:
                description: "Error en el servicio"

  deletePeople:
    handler: controllers/peopleController.deletePeople
    events:
      - http:
          path: /deletePeople/{id}
          method: delete
          request:
            parameters:
              paths:
                id: true
          documentation:
            summary: "Se elimina un registro de la tabla people"
            description: "Se eliminará el registro del id ingresado en dynamoDB"
            pathParams:
              -
                name: "id"
                description: "id del registro people del API SWAPI"
            methodResponses:
            -
              statusCode: "200"
              responseBody:
                description: "Se obtuvo eliminó correctamete de la base de datos"
            -
              statusCode: "500"
              responseBody:
                description: "Error en el servicio"

resources:
  Resources:
    PostsTable: 
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: people